package main

/*
=== Базовая задача ===
Создать программу печатающую точное время с использованием NTP библиотеки.Инициализировать как go module.
Использовать библиотеку https://github.com/beevik/ntp.
Написать программу печатающую текущее время / точное время с использованием этой библиотеки.

Программа должна быть оформлена с использованием как go module.
Программа должна корректно обрабатывать ошибки библиотеки: распечатывать их в STDERR и возвращать ненулевой код выхода в OS.
Программа должна проходить проверки go vet и golint.
*/

/*
go vet проверяет исходный код Go и сообщает о подозрительных конструкциях, таких как вызовы Printf,
аргументы которых не совпадают с форматом строки. vet использует эвристику, которая не гарантирует,
что все отчеты являются подлинными проблемами, но он может найти ошибки, не обнаруженные компиляторами.
Команда:
go vet -c=10 -json

goling проверяет код на основе документов Effective Go (https://go.dev/doc/effective_go) и CodeReviewComments (https://github.com/golang/go/wiki/CodeReviewComments)
Голинт не совершенен и имеет как ложные положительные, так и ложные отрицательные стороны. Не относитесь к его выпуску как к золотому стандарту.

NTP (Network Time Protocol) — протокол синхронизации времени по компьютерной сети.
*/

import (
	"fmt"
	"github.com/beevik/ntp"
	"log"
	"time"
)

func main() {
	ntpTime, err := ntp.Query("0.beevik-ntp.pool.ntp.org")
	if err != nil {
		log.Fatalln(err)
	}
	fmt.Printf("Текущее время:\t %s\n", time.Now())
	fmt.Printf("NTP время:\t %v\n", time.Now().Add(ntpTime.ClockOffset))

}
